{"version":3,"sources":["webpack:///webpack/bootstrap fbc3a6e804757f5a73b2","webpack:///./lib/project.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;;AAEA;AACA;AACA;AACA,EAAC;;AAED;AACA,uEAAsE;AACtE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,uCAAsC,gBAAgB,EAAE;;AAExD;AACA;AACA;;AAEA;AACA;AACA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap fbc3a6e804757f5a73b2\n **/","const StuffPicker = require('./stuff_picker.js');\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  const picker = new StuffPicker();\n  picker.firstRender();\n});\n\nfunction prompt(window, pref, message, callback) {\n    let branch = Components.classes[\"@mozilla.org/preferences-service;1\"]\n                           .getService(Components.interfaces.nsIPrefBranch);\n\n    if (branch.getPrefType(pref) === branch.PREF_STRING) {\n        switch (branch.getCharPref(pref)) {\n        case \"always\":\n            return callback(true);\n        case \"never\":\n            return callback(false);\n        }\n    }\n\n    let done = false;\n\n    function remember(value, result) {\n        return function() {\n            done = true;\n            branch.setCharPref(pref, value);\n            callback(result);\n        }\n    }\n\n    let self = window.PopupNotifications.show(\n        window.gBrowser.selectedBrowser,\n        \"geolocation\",\n        message,\n        \"geo-notification-icon\",\n        {\n            label: \"Share Location\",\n            accessKey: \"S\",\n            callback: function(notification) {\n                done = true;\n                callback(true);\n            }\n        }, [\n            {\n                label: \"Always Share\",\n                accessKey: \"A\",\n                callback: remember(\"always\", true)\n            },\n            {\n                label: \"Never Share\",\n                accessKey: \"N\",\n                callback: remember(\"never\", false)\n            }\n        ], {\n            eventCallback: function(event) {\n                if (event === \"dismissed\") {\n                    if (!done) callback(false);\n                    done = true;\n                    window.PopupNotifications.remove(self);\n                }\n            },\n            persistWhileVisible: true\n        });\n}\n// prompt(window,\n//        \"extensions.foo-addon.allowGeolocation\",\n//        \"Foo Add-on wants to know your location.\",\n//        function callback(allowed) { alert(allowed); });\n\n// A picker has filters and a spinner.\n// The spinner is re-created each time the filters change.\n// The spinner is thrown into a re-render loop each time the spinner is clicked.\n\n// How are results generated and displayed?\n// spinner will generate a color, and send that back to the picker\n// the picker will update the results section to display a random suggestion on the selected color background\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/project.js\n ** module id = 0\n ** module chunks = 0\n **/"],"sourceRoot":""}